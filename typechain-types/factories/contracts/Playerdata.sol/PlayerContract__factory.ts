/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  PlayerContract,
  PlayerContractInterface,
} from "../../../contracts/Playerdata.sol/PlayerContract";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "Playerlist",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "Stamina",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "Life",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "Strength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "Intelligence",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "Attack",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "Defense",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "Level",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "allowedContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "createPlayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_allowedContract",
        type: "address",
      },
    ],
    name: "setAllowedContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newAddress",
        type: "address",
      },
    ],
    name: "setNewMananger",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "updatePlayerName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_Stamina",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_Life",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_Strength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_Intelligence",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_Attack",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_Defense",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_Level",
        type: "uint256",
      },
    ],
    name: "updatePlayerProperties",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052611234600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561005357600080fd5b5061007061006561007560201b60201c565b61007d60201b60201c565b610141565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611507806101506000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063ce5f4bd011610066578063ce5f4bd01461013a578063e3bdb64914610156578063e7fad3f414610172578063e89d5a891461018e578063f2fde38b146101ac5761009e565b80631d061c3e146100a3578063715018a6146100da57806386e32ed0146100e45780638da5cb5b14610100578063b586a7401461011e575b600080fd5b6100bd60048036038101906100b89190610be3565b6101c8565b6040516100d1989796959493929190610cb9565b60405180910390f35b6100e2610298565b005b6100fe60048036038101906100f99190610be3565b6102ac565b005b6101086102f8565b6040516101159190610d4d565b60405180910390f35b61013860048036038101906101339190610dcd565b610321565b005b610154600480360381019061014f9190610e46565b61056e565b005b610170600480360381019061016b9190610be3565b610877565b005b61018c60048036038101906101879190610efc565b6108c3565b005b610196610988565b6040516101a39190610d4d565b60405180910390f35b6101c660048036038101906101c19190610be3565b6109ae565b005b60016020528060005260406000206000915090508060000180546101eb90610f8b565b80601f016020809104026020016040519081016040528092919081815260200182805461021790610f8b565b80156102645780601f1061023957610100808354040283529160200191610264565b820191906000526020600020905b81548152906001019060200180831161024757829003601f168201915b5050505050908060010154908060020154908060030154908060040154908060050154908060060154908060070154905088565b6102a0610a31565b6102aa6000610aaf565b565b6102b4610a31565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b8181600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000191826103729291906111a2565b506005600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506005600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055506005600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506005600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401819055506005600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501819055506005600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206006018190555060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600701819055505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f5906112e4565b60405180910390fd5b86600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282546106509190611333565b9250508190555085600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008282546106a99190611333565b9250508190555084600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160008282546107029190611333565b9250508190555083600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401600082825461075b9190611333565b9250508190555082600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160008282546107b49190611333565b9250508190555081600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601600082825461080d9190611333565b9250508190555080600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060070160008282546108669190611333565b925050819055505050505050505050565b61087f610a31565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b3373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610931576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610928906113b3565b60405180910390fd5b8181600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000191826109829291906111a2565b50505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6109b6610a31565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1c90611445565b60405180910390fd5b610a2e81610aaf565b50565b610a39610b73565b73ffffffffffffffffffffffffffffffffffffffff16610a576102f8565b73ffffffffffffffffffffffffffffffffffffffff1614610aad576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa4906114b1565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bb082610b85565b9050919050565b610bc081610ba5565b8114610bcb57600080fd5b50565b600081359050610bdd81610bb7565b92915050565b600060208284031215610bf957610bf8610b7b565b5b6000610c0784828501610bce565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c4a578082015181840152602081019050610c2f565b60008484015250505050565b6000601f19601f8301169050919050565b6000610c7282610c10565b610c7c8185610c1b565b9350610c8c818560208601610c2c565b610c9581610c56565b840191505092915050565b6000819050919050565b610cb381610ca0565b82525050565b6000610100820190508181036000830152610cd4818b610c67565b9050610ce3602083018a610caa565b610cf06040830189610caa565b610cfd6060830188610caa565b610d0a6080830187610caa565b610d1760a0830186610caa565b610d2460c0830185610caa565b610d3160e0830184610caa565b9998505050505050505050565b610d4781610ba5565b82525050565b6000602082019050610d626000830184610d3e565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610d8d57610d8c610d68565b5b8235905067ffffffffffffffff811115610daa57610da9610d6d565b5b602083019150836001820283011115610dc657610dc5610d72565b5b9250929050565b60008060208385031215610de457610de3610b7b565b5b600083013567ffffffffffffffff811115610e0257610e01610b80565b5b610e0e85828601610d77565b92509250509250929050565b610e2381610ca0565b8114610e2e57600080fd5b50565b600081359050610e4081610e1a565b92915050565b600080600080600080600080610100898b031215610e6757610e66610b7b565b5b6000610e758b828c01610bce565b9850506020610e868b828c01610e31565b9750506040610e978b828c01610e31565b9650506060610ea88b828c01610e31565b9550506080610eb98b828c01610e31565b94505060a0610eca8b828c01610e31565b93505060c0610edb8b828c01610e31565b92505060e0610eec8b828c01610e31565b9150509295985092959890939650565b600080600060408486031215610f1557610f14610b7b565b5b6000610f2386828701610bce565b935050602084013567ffffffffffffffff811115610f4457610f43610b80565b5b610f5086828701610d77565b92509250509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610fa357607f821691505b602082108103610fb657610fb5610f5c565b5b50919050565b600082905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026110587fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261101b565b611062868361101b565b95508019841693508086168417925050509392505050565b6000819050919050565b600061109f61109a61109584610ca0565b61107a565b610ca0565b9050919050565b6000819050919050565b6110b983611084565b6110cd6110c5826110a6565b848454611028565b825550505050565b600090565b6110e26110d5565b6110ed8184846110b0565b505050565b5b81811015611111576111066000826110da565b6001810190506110f3565b5050565b601f8211156111565761112781610ff6565b6111308461100b565b8101602085101561113f578190505b61115361114b8561100b565b8301826110f2565b50505b505050565b600082821c905092915050565b60006111796000198460080261115b565b1980831691505092915050565b60006111928383611168565b9150826002028217905092915050565b6111ac8383610fbc565b67ffffffffffffffff8111156111c5576111c4610fc7565b5b6111cf8254610f8b565b6111da828285611115565b6000601f83116001811461120957600084156111f7578287013590505b6112018582611186565b865550611269565b601f19841661121786610ff6565b60005b8281101561123f5784890135825560018201915060208501945060208101905061121a565b8683101561125c5784890135611258601f891682611168565b8355505b6001600288020188555050505b50505050505050565b7f4f6e6c7920616c6c6f77656420636f6e74726163742063616e2063616c6c207460008201527f6869732066756e6374696f6e0000000000000000000000000000000000000000602082015250565b60006112ce602c83610c1b565b91506112d982611272565b604082019050919050565b600060208201905081810360008301526112fd816112c1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061133e82610ca0565b915061134983610ca0565b925082820190508082111561136157611360611304565b5b92915050565b7f596f752063616e277420646f2069742e00000000000000000000000000000000600082015250565b600061139d601083610c1b565b91506113a882611367565b602082019050919050565b600060208201905081810360008301526113cc81611390565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061142f602683610c1b565b915061143a826113d3565b604082019050919050565b6000602082019050818103600083015261145e81611422565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061149b602083610c1b565b91506114a682611465565b602082019050919050565b600060208201905081810360008301526114ca8161148e565b905091905056fea2646970667358221220b4e2167df6cbd0a8a5aeb01e064f5d0a6372a22d0b35c80784cd8529933b465964736f6c63430008100033";

type PlayerContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PlayerContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PlayerContract__factory extends ContractFactory {
  constructor(...args: PlayerContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PlayerContract> {
    return super.deploy(overrides || {}) as Promise<PlayerContract>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PlayerContract {
    return super.attach(address) as PlayerContract;
  }
  override connect(signer: Signer): PlayerContract__factory {
    return super.connect(signer) as PlayerContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PlayerContractInterface {
    return new utils.Interface(_abi) as PlayerContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PlayerContract {
    return new Contract(address, _abi, signerOrProvider) as PlayerContract;
  }
}
