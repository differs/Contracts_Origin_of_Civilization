/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Management,
  ManagementInterface,
} from "../../../contracts/attributeManagement.sol/Management";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "Attributelist",
    outputs: [
      {
        internalType: "uint256",
        name: "Stamina",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "Life",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "Strength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "Intelligence",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "Attack",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "Defense",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "Level",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "Nftcontract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "Stamina",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "Life",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "Strength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "Intelligence",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "Attack",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "Defense",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "Level",
        type: "uint256",
      },
    ],
    name: "addAttribute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "NftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "destroyNft1155",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "NftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "destroyNft721",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405273d9145cce52d386f254917e481eb44e9943f39138600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006557600080fd5b506109a0806100756000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063018b69ae146100515780637b19c0eb14610087578063ddc93abc146100a3578063df1e48de146100bf575b600080fd5b61006b600480360381019061006691906105d5565b6100db565b60405161007e979695949392919061061b565b60405180910390f35b6100a1600480360381019061009c91906106b6565b61011d565b005b6100bd60048036038101906100b891906106f6565b6102e3565b005b6100d960048036038101906100d491906106b6565b6103a7565b005b60006020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154908060050154908060060154905087565b60008290508073ffffffffffffffffffffffffffffffffffffffff166323b872dd3361dead856040518463ffffffff1660e01b8152600401610161939291906107bb565b600060405180830381600087803b15801561017b57600080fd5b505af115801561018f573d6000803e3d6000fd5b5050505060008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060e00160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820154815250509050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ce5f4bd033836000015184602001518560400151866060015187608001518860a001518960c001516040518963ffffffff1660e01b81526004016102ab9897969594939291906107f2565b600060405180830381600087803b1580156102c557600080fd5b505af11580156102d9573d6000803e3d6000fd5b5050505050505050565b6040518060e00160405280888152602001878152602001868152602001858152602001848152602001838152602001828152506000808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c082015181600601559050505050505050505050565b60008290508073ffffffffffffffffffffffffffffffffffffffff1663f242432a3361dead8560016040518563ffffffff1660e01b81526004016103ee9493929190610912565b600060405180830381600087803b15801561040857600080fd5b505af115801561041c573d6000803e3d6000fd5b50505050600080600061012373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060e00160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820154815250509050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ce5f4bd033836000015184602001518560400151866060015187608001518860a001518960c001516040518963ffffffff1660e01b815260040161053a9897969594939291906107f2565b600060405180830381600087803b15801561055457600080fd5b505af1158015610568573d6000803e3d6000fd5b5050505050505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105a282610577565b9050919050565b6105b281610597565b81146105bd57600080fd5b50565b6000813590506105cf816105a9565b92915050565b6000602082840312156105eb576105ea610572565b5b60006105f9848285016105c0565b91505092915050565b6000819050919050565b61061581610602565b82525050565b600060e082019050610630600083018a61060c565b61063d602083018961060c565b61064a604083018861060c565b610657606083018761060c565b610664608083018661060c565b61067160a083018561060c565b61067e60c083018461060c565b98975050505050505050565b61069381610602565b811461069e57600080fd5b50565b6000813590506106b08161068a565b92915050565b600080604083850312156106cd576106cc610572565b5b60006106db858286016105c0565b92505060206106ec858286016106a1565b9150509250929050565b600080600080600080600080610100898b03121561071757610716610572565b5b60006107258b828c016105c0565b98505060206107368b828c016106a1565b97505060406107478b828c016106a1565b96505060606107588b828c016106a1565b95505060806107698b828c016106a1565b94505060a061077a8b828c016106a1565b93505060c061078b8b828c016106a1565b92505060e061079c8b828c016106a1565b9150509295985092959890939650565b6107b581610597565b82525050565b60006060820190506107d060008301866107ac565b6107dd60208301856107ac565b6107ea604083018461060c565b949350505050565b600061010082019050610808600083018b6107ac565b610815602083018a61060c565b610822604083018961060c565b61082f606083018861060c565b61083c608083018761060c565b61084960a083018661060c565b61085660c083018561060c565b61086360e083018461060c565b9998505050505050505050565b6000819050919050565b6000819050919050565b600061089f61089a61089584610870565b61087a565b610602565b9050919050565b6108af81610884565b82525050565b600082825260208201905092915050565b7f3078000000000000000000000000000000000000000000000000000000000000600082015250565b60006108fc6002836108b5565b9150610907826108c6565b602082019050919050565b600060a08201905061092760008301876107ac565b61093460208301866107ac565b610941604083018561060c565b61094e60608301846108a6565b818103608083015261095f816108ef565b90509594505050505056fea2646970667358221220c8f77cc79158b8ad1c503d70fab80f390f39b9ac2f9f1f83441b4c106dd2a10264736f6c63430008100033";

type ManagementConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ManagementConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Management__factory extends ContractFactory {
  constructor(...args: ManagementConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Management> {
    return super.deploy(overrides || {}) as Promise<Management>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Management {
    return super.attach(address) as Management;
  }
  override connect(signer: Signer): Management__factory {
    return super.connect(signer) as Management__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ManagementInterface {
    return new utils.Interface(_abi) as ManagementInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Management {
    return new Contract(address, _abi, signerOrProvider) as Management;
  }
}
